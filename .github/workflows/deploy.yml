name: Deploy Nginx to AWS ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1  

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set IMAGE_TAG
        run: echo "IMAGE_TAG=${GITHUB_SHA}" >> $GITHUB_ENV

      - name: Build and push Docker image
        env:
          ECR_REGISTRY: 061051223657.dkr.ecr.ap-south-1.amazonaws.com
          ECR_REPOSITORY: myrepo
        run: |
          echo "Using IMAGE_TAG: $IMAGE_TAG"
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Fetch current ECS Task Definition
        env:
          TASK_FAMILY: taskdefinition  # Ensure this is set correctly
        run: |
          echo "Fetching task definition for $TASK_FAMILY"
          aws ecs describe-task-definition --task-definition $TASK_FAMILY --query taskDefinition > task-def.json

      - name: Update Task Definition with new image
        env:
          ECR_REGISTRY: 061051223657.dkr.ecr.ap-south-1.amazonaws.com
          ECR_REPOSITORY: myrepo
          CONTAINER_NAME: container
        run: |
          echo "Updating task definition JSON with new image"
          
          # Extract essential fields and update the image while keeping memory settings
          jq --arg IMAGE "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" \
            '.containerDefinitions[0].image = $IMAGE | 
             .containerDefinitions[0] += {memory: 512, memoryReservation: 256} | 
             {family, containerDefinitions}' task-def.json > new-task-def.json

          echo "Registering new task definition"
          TASK_DEFINITION_ARN=$(aws ecs register-task-definition --cli-input-json file://new-task-def.json --query 'taskDefinition.taskDefinitionArn' --output text)
          echo "TASK_DEFINITION_ARN=$TASK_DEFINITION_ARN" >> $GITHUB_ENV

      - name: Update ECS Service with new Task Definition
        env:
          CLUSTER_NAME: cluster
          SERVICE_NAME: myservice
        run: |
          echo "Updating ECS service $SERVICE_NAME in cluster $CLUSTER_NAME"
          aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --force-new-deployment --task-definition $TASK_DEFINITION_ARN
